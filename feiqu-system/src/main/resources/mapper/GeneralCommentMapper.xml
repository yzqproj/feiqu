<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.feiqu.system.mapper.GeneralCommentMapper">
  <resultMap id="BaseResultMap" type="com.feiqu.system.model.GeneralComment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="topic_id" jdbcType="INTEGER" property="topicId" />
    <result column="topic_type" jdbcType="INTEGER" property="topicType" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="post_user_id" jdbcType="INTEGER" property="postUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="like_count" jdbcType="INTEGER" property="likeCount" />
    <result column="del_flag" jdbcType="INTEGER" property="delFlag" />
    <result column="has_reply" jdbcType="INTEGER" property="hasReply" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="CommentResultMap" type="com.feiqu.system.pojo.response.DetailCommentResponse">
    <result column="nickname" jdbcType="VARCHAR" property="postNickname" />
    <result column="icon" jdbcType="VARCHAR" property="postIcon" />
    <result column="u_time" jdbcType="TIMESTAMP" property="utime" />
    <result column="qudou_num" jdbcType="INTEGER" property="qudouNum" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="CommentThoughtResultMap" type="com.feiqu.system.pojo.response.CommentsWithThoughtResponse">
    <result column="thought_content" jdbcType="VARCHAR" property="thoughtContent" />
    <result column="thought_id" jdbcType="INTEGER" property="thoughtId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, topic_id, topic_type, content, post_user_id, create_time, like_count, del_flag, 
    has_reply
  </sql>
  <select id="selectCommentsByTopic" parameterType="com.feiqu.system.model.Article" resultMap="CommentResultMap">
    select *  from general_comment aa,fq_user bb where aa.post_user_id = bb.id and aa.topic_id = #{id}
    ORDER BY aa.create_time desc
  </select>

  <select id="selectCommentsWithThought" parameterType="java.lang.Integer" resultMap="CommentThoughtResultMap">
    select aa.*,bb.id as thought_id,bb.thought_content from general_comment aa LEFT JOIN thought bb ON aa.topic_id=bb.id AND aa.topic_type = 1
    WHERE aa.post_user_id = #{postUserId} AND aa.del_flag = 0
    ORDER BY aa.create_time desc
  </select>

  <select id="selectUserByExample" parameterType="com.feiqu.system.model.GeneralCommentExample" resultMap="CommentResultMap">
    select aa.id, aa.topic_id, aa.topic_type, aa.content, aa.post_user_id, aa.create_time, aa.like_count, aa.del_flag,aa.has_reply,
    bb.icon,bb.nickname,bb.create_time as u_time,bb.sex,bb.qudou_num  from general_comment aa LEFT JOIN fq_user bb on aa.post_user_id = bb.id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.feiqu.system.model.GeneralCommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from general_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from general_comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from general_comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.feiqu.system.model.GeneralCommentExample">
    delete from general_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.feiqu.system.model.GeneralComment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into general_comment (topic_id, topic_type, content, 
      post_user_id, create_time, like_count, 
      del_flag, has_reply)
    values (#{topicId,jdbcType=INTEGER}, #{topicType,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, 
      #{postUserId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{likeCount,jdbcType=INTEGER}, 
      #{delFlag,jdbcType=INTEGER}, #{hasReply,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.feiqu.system.model.GeneralComment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into general_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="topicId != null">
        topic_id,
      </if>
      <if test="topicType != null">
        topic_type,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="postUserId != null">
        post_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="likeCount != null">
        like_count,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
      <if test="hasReply != null">
        has_reply,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="topicId != null">
        #{topicId,jdbcType=INTEGER},
      </if>
      <if test="topicType != null">
        #{topicType,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="postUserId != null">
        #{postUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="likeCount != null">
        #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="hasReply != null">
        #{hasReply,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.feiqu.system.model.GeneralCommentExample" resultType="java.lang.Long">
    select count(*) from general_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update general_comment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.topicId != null">
        topic_id = #{record.topicId,jdbcType=INTEGER},
      </if>
      <if test="record.topicType != null">
        topic_type = #{record.topicType,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.postUserId != null">
        post_user_id = #{record.postUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.likeCount != null">
        like_count = #{record.likeCount,jdbcType=INTEGER},
      </if>
      <if test="record.delFlag != null">
        del_flag = #{record.delFlag,jdbcType=INTEGER},
      </if>
      <if test="record.hasReply != null">
        has_reply = #{record.hasReply,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update general_comment
    set id = #{record.id,jdbcType=INTEGER},
      topic_id = #{record.topicId,jdbcType=INTEGER},
      topic_type = #{record.topicType,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      post_user_id = #{record.postUserId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      like_count = #{record.likeCount,jdbcType=INTEGER},
      del_flag = #{record.delFlag,jdbcType=INTEGER},
      has_reply = #{record.hasReply,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.feiqu.system.model.GeneralComment">
    update general_comment
    <set>
      <if test="topicId != null">
        topic_id = #{topicId,jdbcType=INTEGER},
      </if>
      <if test="topicType != null">
        topic_type = #{topicType,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="postUserId != null">
        post_user_id = #{postUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="likeCount != null">
        like_count = #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="hasReply != null">
        has_reply = #{hasReply,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.feiqu.system.model.GeneralComment">
    update general_comment
    set topic_id = #{topicId,jdbcType=INTEGER},
      topic_type = #{topicType,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      post_user_id = #{postUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      like_count = #{likeCount,jdbcType=INTEGER},
      del_flag = #{delFlag,jdbcType=INTEGER},
      has_reply = #{hasReply,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>